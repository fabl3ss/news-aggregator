// Code generated by MockGen. DO NOT EDIT.
// Source: parser-golang/pkg/domain/neural.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	http "net/http"
	domain "parser-golang/pkg/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNeuralUsecase is a mock of NeuralUsecase interface.
type MockNeuralUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockNeuralUsecaseMockRecorder
}

// MockNeuralUsecaseMockRecorder is the mock recorder for MockNeuralUsecase.
type MockNeuralUsecaseMockRecorder struct {
	mock *MockNeuralUsecase
}

// NewMockNeuralUsecase creates a new mock instance.
func NewMockNeuralUsecase(ctrl *gomock.Controller) *MockNeuralUsecase {
	mock := &MockNeuralUsecase{ctrl: ctrl}
	mock.recorder = &MockNeuralUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNeuralUsecase) EXPECT() *MockNeuralUsecaseMockRecorder {
	return m.recorder
}

// GetTextForNeural mocks base method.
func (m *MockNeuralUsecase) GetTextForNeural(res *domain.ParserResponse) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTextForNeural", res)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTextForNeural indicates an expected call of GetTextForNeural.
func (mr *MockNeuralUsecaseMockRecorder) GetTextForNeural(res interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTextForNeural", reflect.TypeOf((*MockNeuralUsecase)(nil).GetTextForNeural), res)
}

// NeuralRequestBody mocks base method.
func (m *MockNeuralUsecase) NeuralRequestBody(res *domain.ParserResponse) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NeuralRequestBody", res)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NeuralRequestBody indicates an expected call of NeuralRequestBody.
func (mr *MockNeuralUsecaseMockRecorder) NeuralRequestBody(res interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NeuralRequestBody", reflect.TypeOf((*MockNeuralUsecase)(nil).NeuralRequestBody), res)
}

// ProcessNews mocks base method.
func (m *MockNeuralUsecase) ProcessNews(url string, parsed *domain.ParserResponse) (*domain.NeuralResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessNews", url, parsed)
	ret0, _ := ret[0].(*domain.NeuralResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessNews indicates an expected call of ProcessNews.
func (mr *MockNeuralUsecaseMockRecorder) ProcessNews(url, parsed interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessNews", reflect.TypeOf((*MockNeuralUsecase)(nil).ProcessNews), url, parsed)
}
